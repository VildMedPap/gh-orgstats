#!/bin/bash

# Copyright (c) 2021 Sebastian Steenssøe
# All rights reserved.

# This source code is licensed under the MIT-style license found in the
# LICENSE file in the root directory of this source tree.

# Author: Sebastian Steenssøe
# Date Created: 02/09/2021
# Last Modified: 02/09/2021

# Description
# Organisation specific extension for gh cli to retrieve different statistics

# Source(s)
# https://github.com/VildMedPap/gh-orgstats

# Usage
# gh extension install VildMedPap/gh-orgstats
# gh orgstats --help
set -e

# Source helper functions
DIR="$(dirname "$0")"
. "$DIR/helper_functions"

# Parse arguments
# Solution borrowed from https://unix.stackexchange.com/a/580258
while [ $# -gt 0 ]
do
    case "$1" in
        --org*|-o*)
            if [[ "$1" != *=* ]]; then shift; fi
            ORG="${1#*=}"
            ;;
        --stats*|-s*)
            if [[ "$1" != *=* ]]; then shift; fi
            STATS="${1#*=}"
            ;;
        --plain*|-p*)
            PLAIN=0
            ;;
        --json*|-j*)
            JSON=0
            ;;
        --help|-h)
            get_help
            exit 0
            ;;
        *)
            >&2 printf "Error: Invalid argument\n"
            exit 1
            ;;
    esac
    shift
done

if [ -z $STATS ]
then
    STATS=repos,open_issues,closed_issues
fi

# Retrieve number of repos
if [[ $STATS == *"repos"* ]]
then
    value=$(get_repos $ORG)

    if [ ! -z $JSON ]
    then
        JSON_FMT+="\"repos\": $value,"
    else
        if [ -z $PLAIN ]; then printf "\033[32m✓\033[0m ${value} repositories\n"; else echo $value;fi
    fi
fi

# Retrieve open issues
if [[ $STATS == *"open_issues"* ]]
then
    value=$(get_open_issues $ORG)

    if [ ! -z $JSON ]
    then
        JSON_FMT+="\"open_issues\": $value,"
    else
        if [ -z $PLAIN ]; then printf "\033[32m✓\033[0m ${value} issues are marked as \"open\"\n"; else echo $value;fi
    fi
fi

# Retrieve closed issues
if [[ $STATS == *"closed_issues"* ]]
then
    value=$(get_closed_issues $ORG)

    if [ ! -z $JSON ]
    then
        JSON_FMT+="\"closed_issues\": $value,"
    else
        if [ -z $PLAIN ]; then printf "\033[32m✓\033[0m ${value} issues are marked as \"closed\"\n"; else echo $value;fi
    fi
fi

# Concatenate to json
if [ ! -z $JSON ];then echo "{${JSON_FMT::-1}}"|jq .;fi
